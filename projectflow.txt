Building Pipeline :

1) Create github repo and clone it in local (add experiments)
2) Add src folder along with all components (run them individually)
3) Add data, models, reports directories to .gitignore file
4) Git add commit push

Setting up dvc pipeline (without params)
5) Create dvc.yaml file and add stages to it
6) dvc init then do dvc repro to test the pipeline automation. (check dvc dag)
7) git add commit push

Setting dvc pipeline (with params)
8) add params.yaml file
9) add the params setup (mentioned below)
10) Do "dvc repro" again to test the pipeline along with the params
11) git add commit push

Experiments with DVC:
12) pip install dvclive
13) add dvclive code (mentioned below)
14) Do "dvc exp run", it will create a dvc.yaml (if already not there) and dvclive directory (each run will be considered as an experiment)
15) do "dvc exp show" on terminal to see the experiments or use extension on VSCode (install dvc extension)
16) Do "dvc exp remove {exp-name}" to remove exp (optinal) | "dvc exp apply {exp-name}" to reproduce prev exp
17) change params, rerun the code (produce new experiments)
18) git add commit push

Adding remote S3 storage to DVC:
19) login to aws console
20) create iam user
21) Create S3
22) pip install dvc[s3]
23) pip install awscli
24) aws configure
25) dvc remote add -d dvcstore s3://bucketname
26) dvc commit-push the exp outcome that you want to keep
27) finally, git add commit push










------------------------------------------

params.yaml setup
* import yaml
* add function : 
    def load_params(params_path: str) -> dict:
    """Load parameters from a YAML file."""
    try:
        with open(params_path, 'r') as file:
            params = yaml.safe_load(file)
        logger.debug('Parameters retrieved from %s', params_path)
        return params
    except FileNotFoundError:
        logger.error('File not found: %s', params_path)
        raise
    except yaml.YAMLError as e:
        logger.error('YAML error: %s', e)
        raise
    except Exception as e:
        logger.error('Unexpected error: %s', e)
        raise

* add to main():
    params = load_params(params_path='params.yaml')
        test_size = params['data_ingestion']['test_size']


----------------------------------------

dvclive code block:
1) import yaml
from dvclive import Live

2) add load_params function and initiate params var in main

    def load_params(params_path: str) -> dict:
    """Load parameters from a YAML file."""
    try:
        with open(params_path, 'r') as file:
            params = yaml.safe_load(file)
        logger.debug('Parameters retrieved from %s', params_path)
        return params
    except FileNotFoundError:
        logger.error('File not found: %s', params_path)
        raise
    except yaml.YAMLError as e:
        logger.error('YAML error: %s', e)
        raise
    except Exception as e:
        logger.error('Unexpected error: %s', e)
        raise

3) add below code block to main
    with Live(save_dvc_exp=True) as live:
            live.log_metric('accuracy', accuracy_score(y_test, y_test))
            live.log_metric('precision', precision_score(y_test, y_test))
            live.log_metric('recall', recall_score(y_test, y_test))

            live.log_params(params)